{:rename-macros {}, :renames {}, :use-macros {testing cljs.test, defcard-rg devcards.core, is cljs.test, deftest devcards.core, defcard devcards.core}, :excludes #{}, :name matchit.devcards, :imports nil, :requires {matchit.core matchit.core, devcards.core devcards.core, cljs.test cljs.test, reagent.core reagent.core}, :uses {atom reagent.core, visible matchit.core, board matchit.core, reveal matchit.core, matchitmon matchit.core, view-box matchit.core, hide matchit.core, hidden matchit.core}, :defs {t_matchit$devcards34509 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name matchit.devcards/t_matchit$devcards34509, :file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :type true, :anonymous true, :column 1, :line 34, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, revealing-a-tile {:protocol-inline nil, :meta {:file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :line 60, :column 10, :end-line 60, :end-column 26}, :name matchit.devcards/revealing-a-tile, :variadic false, :file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 60, :end-line 60, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, t_matchit$devcards34503 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name matchit.devcards/t_matchit$devcards34503, :file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :type true, :anonymous true, :column 1, :line 20, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_matchit$devcards34500 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name matchit.devcards/t_matchit$devcards34500, :file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :type true, :anonymous true, :column 1, :line 12, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_matchit$devcards34503 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta34504])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name matchit.devcards/->t_matchit$devcards34503, :variadic false, :file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :method-params ([meta34504]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta34504])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, default-board {:name matchit.devcards/default-board, :file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :line 11, :column 1, :end-line 11, :end-column 23, :meta {:file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :line 11, :column 10, :end-line 11, :end-column 23}}, t_matchit$devcards34506 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name matchit.devcards/t_matchit$devcards34506, :file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :type true, :anonymous true, :column 1, :line 27, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, large-board {:name matchit.devcards/large-board, :file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :line 33, :column 1, :end-line 33, :end-column 21, :meta {:file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :line 33, :column 10, :end-line 33, :end-column 21}}, hiding-a-tile-with-related-reveals {:protocol-inline nil, :meta {:file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :line 78, :column 10, :end-line 78, :end-column 44}, :name matchit.devcards/hiding-a-tile-with-related-reveals, :variadic false, :file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :end-column 44, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 78, :end-line 78, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, ->t_matchit$devcards34509 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta34510])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name matchit.devcards/->t_matchit$devcards34509, :variadic false, :file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :method-params ([meta34510]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta34510])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, default-board-all-tiles-revealed {:name matchit.devcards/default-board-all-tiles-revealed, :file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :line 26, :column 1, :end-line 26, :end-column 42, :meta {:file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :line 26, :column 10, :end-line 26, :end-column 42}}, ->t_matchit$devcards34506 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta34507])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name matchit.devcards/->t_matchit$devcards34506, :variadic false, :file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :method-params ([meta34507]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta34507])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, creating-a-board {:protocol-inline nil, :meta {:file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :line 40, :column 10, :end-line 40, :end-column 26}, :name matchit.devcards/creating-a-board, :variadic false, :file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 40, :end-line 40, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, default-board-tile-revealed {:name matchit.devcards/default-board-tile-revealed, :file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :line 19, :column 1, :end-line 19, :end-column 37, :meta {:file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :line 19, :column 10, :end-line 19, :end-column 37}}, hiding-a-tile {:protocol-inline nil, :meta {:file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :line 68, :column 10, :end-line 68, :end-column 23}, :name matchit.devcards/hiding-a-tile, :variadic false, :file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 68, :end-line 68, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, ->t_matchit$devcards34500 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta34501])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name matchit.devcards/->t_matchit$devcards34500, :variadic false, :file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :method-params ([meta34501]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta34501])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {devcards.core devcards.core, cljs.test cljs.test, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:y revealing-a-tile :path set matchit.devcards/hiding-a-tile = map :testing-contexts board meta34507 :matchit.devcards :large-matchitmon :func :pikachu :ns :name <= repeatedly :default-matchitmon-tile-revealed tile :file :hiding-a-tile-with-related-reveals :end-column :width :figwheel-always :history :type meta34501 matchit.devcards/hiding-a-tile-with-related-reveals matchit.devcards/creating-a-board matchit.devcards :documentation :column :default-matchitmon hiding-a-tile-with-related-reveals :main-obj :creating-a-board :fail select-keys :line fn* :face not :watch-atom :initial-data :id matchit.devcards/revealing-a-tile meta34510 :expected :hiding-a-tile :end-line meta34504 :error :options :x :pass :revealing-a-tile creating-a-board filter :arglists :actual :doc :revealed? p1__34513# count hiding-a-tile p1__34512# :test :default-matchitmon-all-tiles-revealed :message :height :board}, :order [:board :height :width :path :func :matchit.devcards :default-matchitmon :name :documentation :main-obj :initial-data :options meta34501 :history :watch-atom :default-matchitmon-tile-revealed meta34504 :default-matchitmon-all-tiles-revealed meta34507 :large-matchitmon meta34510 :creating-a-board :testing-contexts :type :expected :actual :message :error = count filter fn* p1__34512# :revealed? board :pass :fail not map :id :x :y p1__34513# select-keys <= set repeatedly matchit.devcards/creating-a-board :ns :file :end-column :column :line :end-line :arglists :doc :test matchit.devcards :figwheel-always creating-a-board :revealing-a-tile tile matchit.devcards/revealing-a-tile revealing-a-tile :hiding-a-tile matchit.devcards/hiding-a-tile hiding-a-tile :hiding-a-tile-with-related-reveals :face :pikachu matchit.devcards/hiding-a-tile-with-related-reveals hiding-a-tile-with-related-reveals]}, :doc nil}