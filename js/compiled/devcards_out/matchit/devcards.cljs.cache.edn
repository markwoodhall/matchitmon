{:rename-macros {}, :renames {}, :use-macros {defcard-rg devcards.core, is cljs.test, deftest devcards.core, defcard devcards.core}, :excludes #{}, :name matchit.devcards, :imports nil, :requires {matchit.core matchit.core, devcards.core devcards.core, cljs.test cljs.test, reagent.core reagent.core}, :uses {atom reagent.core, visible matchit.core, board matchit.core, reveal matchit.core, matchitmon matchit.core, view-box matchit.core, hide matchit.core, hidden matchit.core}, :defs {revealing-a-tile {:protocol-inline nil, :meta {:file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :line 40, :column 10, :end-line 40, :end-column 26}, :name matchit.devcards/revealing-a-tile, :variadic false, :file "src/matchit/devcards.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 40, :end-line 40, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, ->t_matchit$devcards96342 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta96343])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name matchit.devcards/->t_matchit$devcards96342, :variadic false, :file "src/matchit/devcards.cljs", :method-params ([meta96343]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta96343])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_matchit$devcards96333 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta96334])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name matchit.devcards/->t_matchit$devcards96333, :variadic false, :file "src/matchit/devcards.cljs", :method-params ([meta96334]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta96334])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_matchit$devcards96342 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name matchit.devcards/t_matchit$devcards96342, :file "src/matchit/devcards.cljs", :type true, :anonymous true, :column 1, :line 34, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_matchit$devcards96333 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name matchit.devcards/t_matchit$devcards96333, :file "src/matchit/devcards.cljs", :type true, :anonymous true, :column 1, :line 12, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, default-board {:name matchit.devcards/default-board, :file "src/matchit/devcards.cljs", :line 11, :column 1, :end-line 11, :end-column 23, :meta {:file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :line 11, :column 10, :end-line 11, :end-column 23}}, large-board {:name matchit.devcards/large-board, :file "src/matchit/devcards.cljs", :line 33, :column 1, :end-line 33, :end-column 21, :meta {:file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :line 33, :column 10, :end-line 33, :end-column 21}}, ->t_matchit$devcards96336 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta96337])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name matchit.devcards/->t_matchit$devcards96336, :variadic false, :file "src/matchit/devcards.cljs", :method-params ([meta96337]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta96337])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_matchit$devcards96339 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta96340])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name matchit.devcards/->t_matchit$devcards96339, :variadic false, :file "src/matchit/devcards.cljs", :method-params ([meta96340]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta96340])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_matchit$devcards96339 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name matchit.devcards/t_matchit$devcards96339, :file "src/matchit/devcards.cljs", :type true, :anonymous true, :column 1, :line 27, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_matchit$devcards96336 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name matchit.devcards/t_matchit$devcards96336, :file "src/matchit/devcards.cljs", :type true, :anonymous true, :column 1, :line 20, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, default-board-all-tiles-revealed {:name matchit.devcards/default-board-all-tiles-revealed, :file "src/matchit/devcards.cljs", :line 26, :column 1, :end-line 26, :end-column 42, :meta {:file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :line 26, :column 10, :end-line 26, :end-column 42}}, default-board-tile-revealed {:name matchit.devcards/default-board-tile-revealed, :file "src/matchit/devcards.cljs", :line 19, :column 1, :end-line 19, :end-column 37, :meta {:file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :line 19, :column 10, :end-line 19, :end-column 37}}, hiding-a-tile {:protocol-inline nil, :meta {:file "/d/code/personal/matchitmon/src/matchit/devcards.cljs", :line 47, :column 10, :end-line 47, :end-column 23}, :name matchit.devcards/hiding-a-tile, :variadic false, :file "src/matchit/devcards.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 47, :end-line 47, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}}, :require-macros {devcards.core devcards.core, cljs.test cljs.test, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{revealing-a-tile :path matchit.devcards/hiding-a-tile :matchit.devcards :large-matchitmon :func :ns :name :default-matchitmon-tile-revealed tile :file :end-column :width :figwheel-always :history :type meta96334 matchit.devcards :documentation :column meta96340 :default-matchitmon meta96337 :main-obj :fail :line not :watch-atom :initial-data :id matchit.devcards/revealing-a-tile :expected :hiding-a-tile :end-line :error :options meta96343 :pass :revealing-a-tile :arglists :actual :doc :revealed? hiding-a-tile :test :default-matchitmon-all-tiles-revealed :message :height :board}, :order [:board :height :width :path :func :matchit.devcards :default-matchitmon :name :documentation :main-obj :initial-data :options meta96334 :history :watch-atom :default-matchitmon-tile-revealed meta96337 :default-matchitmon-all-tiles-revealed meta96340 :large-matchitmon meta96343 :revealing-a-tile :id :type :expected :actual :message :error :revealed? tile :pass :fail matchit.devcards/revealing-a-tile :ns :file :end-column :column :line :end-line :arglists :doc :test matchit.devcards :figwheel-always revealing-a-tile :hiding-a-tile not matchit.devcards/hiding-a-tile hiding-a-tile]}, :doc nil}